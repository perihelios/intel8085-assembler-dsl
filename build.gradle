import java.nio.charset.StandardCharsets

apply plugin: "idea"

idea {
	module {
		excludeDirs += file('.idea')
		excludeDirs += file('gradle')
	}
}

subprojects {
	group 'com.perihelios.experimental'
	version '0.0.1'

	apply plugin: 'java'
	apply plugin: 'groovy'

	repositories {
		mavenCentral()
	}

	dependencies {
		compile "org.codehaus.groovy:groovy-all:2.4.7"

		testCompile "junit:junit:4.12"
		testCompile "org.spockframework:spock-core:1.1-groovy-2.4-rc-3"
		testCompile "cglib:cglib-nodep:3.2.5"
	}

	test.doLast {
		List<String> commentBlock = '''
		|/\\*
		| Copyright 2017, Perihelios LLC
		|
		| Licensed under the Apache License, Version 2\\.0 \\(the "License"\\);
		| you may not use this file except in compliance with the License\\.
		| You may obtain a copy of the License at
		|
		|     http://www\\.apache\\.org/licenses/LICENSE-2\\.0
		|
		| Unless required by applicable law or agreed to in writing, software
		| distributed under the License is distributed on an "AS IS" BASIS,
		| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied\\.
		| See the License for the specific language governing permissions and
		| limitations under the License\\.
		|\\*/
		'''.stripMargin("|").trim().split(/\r\n|\n/)

		sourceSets*.allSource*.files.flatten().findAll { it.name =~ /\.(groovy|java)$/ }.each { File source ->
			source.withReader(StandardCharsets.UTF_8.name()) { reader ->
				def commentLines = commentBlock.iterator()

				while (commentLines) {
					String expectedLine = commentLines.next()
					String actualLine = reader.readLine()

					if (!(actualLine ==~ expectedLine)) {
						throw new ResourceException(
							source.toURI(),
							"Source file $source does not start with appropriate copyright block"
						)
					}
				}
			}
		}
	}
}
